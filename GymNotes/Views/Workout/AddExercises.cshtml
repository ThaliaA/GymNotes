@model GymNotes.Models.CreateWorkoutViewModel


    @using (Html.BeginForm("AddExercises", "Workout")) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>CreateWorkoutViewModel</h4>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.ExerciseDefinition.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExerciseDefinition.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExerciseDefinition.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ExerciseDefinition.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExerciseDefinition.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExerciseDefinition.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    @foreach (GymNotes.Entities.ExerciseDefinition item in Model.ExerciseDefinitions)
    {
        <span>@item.Name</span>
    }
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

